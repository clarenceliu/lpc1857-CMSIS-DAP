; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\kbd_lpc18xx.o --asm_dir=.\Lst\ --list_dir=.\Lst\ --depend=.\obj\kbd_lpc18xx.d --cpu=Cortex-M3 --apcs=interwork -O3 -I.\app -I.\USBStack\INC -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\NXP\LPC18xx -D__MICROLIB --omf_browse=.\obj\kbd_lpc18xx.crf KBD_LPC18xx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  KBD_Init PROC
;;;37      *----------------------------------------------------------------------------*/
;;;38     void KBD_Init (void) {
000000  4928              LDR      r1,|L1.164|
;;;39     
;;;40       /* Enable clock and init GPIO inputs */
;;;41       LPC_CCU1->CLK_M3_GPIO_CFG  = CCU_CLK_CFG_AUTO | CCU_CLK_CFG_RUN;
000002  2003              MOVS     r0,#3
000004  6008              STR      r0,[r1,#0]
;;;42       while (!(LPC_CCU1->CLK_M3_GPIO_STAT & CCU_CLK_STAT_RUN)); 
000006  1d08              ADDS     r0,r1,#4
                  |L1.8|
000008  6801              LDR      r1,[r0,#0]
00000a  07c9              LSLS     r1,r1,#31
00000c  d0fc              BEQ      |L1.8|
;;;43     
;;;44       LPC_SCU->SFSP4_0  = (1 << 6) | 0;
00000e  4926              LDR      r1,|L1.168|
000010  2040              MOVS     r0,#0x40
000012  6008              STR      r0,[r1,#0]
;;;45       LPC_SCU->SFSP4_3  = (1 << 6) | 0;
000014  60c8              STR      r0,[r1,#0xc]
;;;46       LPC_SCU->SFSP4_4  = (1 << 6) | 0;
000016  6108              STR      r0,[r1,#0x10]
;;;47     
;;;48       LPC_GPIO_PORT->DIR[2]  &= ~(1 << 0);
000018  4824              LDR      r0,|L1.172|
00001a  6881              LDR      r1,[r0,#8]
00001c  f0210101          BIC      r1,r1,#1
000020  6081              STR      r1,[r0,#8]
;;;49       LPC_GPIO_PORT->DIR[2]  &= ~(1 << 3);
000022  6881              LDR      r1,[r0,#8]
000024  f0210108          BIC      r1,r1,#8
000028  6081              STR      r1,[r0,#8]
;;;50       LPC_GPIO_PORT->DIR[2]  &= ~(1 << 4);
00002a  6881              LDR      r1,[r0,#8]
00002c  f0210110          BIC      r1,r1,#0x10
000030  6081              STR      r1,[r0,#8]
;;;51     
;;;52       /* Configure WAKEUP0 input */
;;;53       LPC_CREG->CREG0 &= ~(3 << 14);
000032  481f              LDR      r0,|L1.176|
000034  6841              LDR      r1,[r0,#4]
000036  f4214140          BIC      r1,r1,#0xc000
00003a  6041              STR      r1,[r0,#4]
;;;54       LPC_EVENTROUTER->HILO    &= ~1;       /* Detect LOW level or falling edge   */
00003c  481d              LDR      r0,|L1.180|
00003e  6801              LDR      r1,[r0,#0]
000040  f0210101          BIC      r1,r1,#1
000044  6001              STR      r1,[r0,#0]
;;;55       LPC_EVENTROUTER->EDGE    &= ~1;       /* Detect LOW level                   */
000046  6841              LDR      r1,[r0,#4]
000048  f0210101          BIC      r1,r1,#1
00004c  6041              STR      r1,[r0,#4]
;;;56       LPC_EVENTROUTER->CLR_STAT =  1;       /* Clear STATUS event bit 0           */
00004e  491a              LDR      r1,|L1.184|
000050  2001              MOVS     r0,#1
000052  6008              STR      r0,[r1,#0]
;;;57     }
000054  4770              BX       lr
;;;58     
                          ENDP

                  KBD_UnInit PROC
;;;65      *----------------------------------------------------------------------------*/
;;;66     void KBD_UnInit (void) {
000056  4814              LDR      r0,|L1.168|
;;;67       LPC_SCU->SFSP4_0 = 0;
000058  2100              MOVS     r1,#0
00005a  6001              STR      r1,[r0,#0]
;;;68       LPC_SCU->SFSP4_3 = 0;
00005c  60c1              STR      r1,[r0,#0xc]
;;;69       LPC_SCU->SFSP4_4 = 0;
00005e  6101              STR      r1,[r0,#0x10]
;;;70     }
000060  4770              BX       lr
;;;71     
                          ENDP

                  KBD_GetKeys PROC
;;;78      *----------------------------------------------------------------------------*/
;;;79     uint32_t KBD_GetKeys (void) {
000062  4912              LDR      r1,|L1.172|
;;;80       /* Read board keyboard inputs */
;;;81       uint32_t val = 0;
000064  2000              MOVS     r0,#0
;;;82     
;;;83       if ((LPC_GPIO_PORT->PIN[2] & (1 << 0)) == 0) {
000066  f8d12108          LDR      r2,[r1,#0x108]
00006a  07d2              LSLS     r2,r2,#31
00006c  d100              BNE      |L1.112|
;;;84         /* P4_0 button */
;;;85         val |= P4_0;
00006e  2001              MOVS     r0,#1
                  |L1.112|
;;;86       }
;;;87       if ((LPC_GPIO_PORT->PIN[2] & (1 << 3)) == 0) {
000070  f8d12108          LDR      r2,[r1,#0x108]
000074  0712              LSLS     r2,r2,#28
000076  d401              BMI      |L1.124|
;;;88         /* P4_3 button */
;;;89         val |= P4_3;
000078  f0400002          ORR      r0,r0,#2
                  |L1.124|
;;;90       }
;;;91       if ((LPC_GPIO_PORT->PIN[2] & (1 << 4)) == 0) {
00007c  f8d11108          LDR      r1,[r1,#0x108]
000080  06c9              LSLS     r1,r1,#27
000082  d401              BMI      |L1.136|
;;;92         /* P4_4 button */
;;;93         val |= P4_4;  
000084  f0400004          ORR      r0,r0,#4
                  |L1.136|
;;;94       }
;;;95     
;;;96       LPC_EVENTROUTER->CLR_STAT =  1;     /* Clear STATUS event bit 0           */
000088  4a0b              LDR      r2,|L1.184|
00008a  2101              MOVS     r1,#1
00008c  6011              STR      r1,[r2,#0]
;;;97       if (LPC_EVENTROUTER->STATUS & 1) {    
00008e  490a              LDR      r1,|L1.184|
000090  3908              SUBS     r1,r1,#8
000092  6809              LDR      r1,[r1,#0]
000094  07c9              LSLS     r1,r1,#31
000096  d001              BEQ      |L1.156|
;;;98         /* WAKEUP0 button */
;;;99         val |= WAKEUP0;    
000098  f0400008          ORR      r0,r0,#8
                  |L1.156|
;;;100      }
;;;101      return (val);
;;;102    }
00009c  4770              BX       lr
;;;103    
                          ENDP

                  KBD_Num PROC
;;;110     *----------------------------------------------------------------------------*/
;;;111    uint32_t KBD_Num (void) {
00009e  2003              MOVS     r0,#3
;;;112      return (NUM_KEYS);
;;;113    }
0000a0  4770              BX       lr
;;;114    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L1.164|
                          DCD      0x40051410
                  |L1.168|
                          DCD      0x40086200
                  |L1.172|
                          DCD      0x400f6000
                  |L1.176|
                          DCD      0x40043000
                  |L1.180|
                          DCD      0x40044000
                  |L1.184|
                          DCD      0x40044fe8

;*** Start embedded assembler ***

#line 1 "KBD_LPC18xx.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___13_KBD_LPC18xx_c_KBD_Init____REV16|
#line 130 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_KBD_LPC18xx_c_KBD_Init____REV16| PROC
#line 131

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___13_KBD_LPC18xx_c_KBD_Init____REVSH|
#line 145
|__asm___13_KBD_LPC18xx_c_KBD_Init____REVSH| PROC
#line 146

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
