; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\usb_config_usb0.o --asm_dir=.\Lst\ --list_dir=.\Lst\ --depend=.\obj\usb_config_usb0.d --cpu=Cortex-M3 --apcs=interwork -O3 -I.\app -I.\USBStack\INC -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\NXP\LPC18xx -D__MICROLIB --omf_browse=.\obj\usb_config_usb0.crf usb_config_USB0.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  USBD_Configure_Event PROC
;;;129      #ifndef __RTX
;;;130                                               void USBD_Configure_Event (void)             { USBD_HID_Configure_Event (); }
000000  f7ffbffe          B.W      USBD_HID_Configure_Event
;;;131      #endif
                          ENDP

                  USBD_ReqClrFeature_MSC PROC
;;;597    #else
;;;598      void USBD_ReqClrFeature_MSC             (U32 EPNum)                                   { }
000004  4770              BX       lr
;;;599      BOOL USBD_EndPoint0_Setup_MSC_ReqToIF   (void)                                        { return (__FALSE); }
                          ENDP

                  USBD_EndPoint0_Setup_MSC_ReqToIF PROC
000006  2000              MOVS     r0,#0
000008  4770              BX       lr
;;;600      BOOL USBD_EndPoint0_Out_MSC_ReqToIF     (void)                                        { return (__FALSE); }
                          ENDP

                  USBD_EndPoint0_Out_MSC_ReqToIF PROC
00000a  2000              MOVS     r0,#0
00000c  4770              BX       lr
;;;601    #endif  /* (USBD_MSC_ENABLE) */
                          ENDP

                  USBD_EndPoint0_Setup_ADC_ReqToIF PROC
;;;603    #if    (USBD_ADC_ENABLE == 0)
;;;604      BOOL USBD_EndPoint0_Setup_ADC_ReqToIF   (void)                                        { return (__FALSE); }
00000e  2000              MOVS     r0,#0
000010  4770              BX       lr
;;;605      BOOL USBD_EndPoint0_Setup_ADC_ReqToEP   (void)                                        { return (__FALSE); }
                          ENDP

                  USBD_EndPoint0_Setup_ADC_ReqToEP PROC
000012  2000              MOVS     r0,#0
000014  4770              BX       lr
;;;606      BOOL USBD_EndPoint0_Out_ADC_ReqToIF     (void)                                        { return (__FALSE); }
                          ENDP

                  USBD_EndPoint0_Out_ADC_ReqToIF PROC
000016  2000              MOVS     r0,#0
000018  4770              BX       lr
;;;607      BOOL USBD_EndPoint0_Out_ADC_ReqToEP     (void)                                        { return (__FALSE); }
                          ENDP

                  USBD_EndPoint0_Out_ADC_ReqToEP PROC
00001a  2000              MOVS     r0,#0
00001c  4770              BX       lr
;;;608    #endif  /* (USBD_MSC_ENABLE) */
                          ENDP

                  USBD_EndPoint0_Setup_CDC_ReqToIF PROC
;;;874    #else
;;;875      BOOL USBD_EndPoint0_Setup_CDC_ReqToIF(void)                                       { return (__FALSE); }
00001e  2000              MOVS     r0,#0
000020  4770              BX       lr
;;;876      BOOL USBD_EndPoint0_Out_CDC_ReqToIF (void)                                        { return (__FALSE); }
                          ENDP

                  USBD_EndPoint0_Out_CDC_ReqToIF PROC
000022  2000              MOVS     r0,#0
000024  4770              BX       lr
;;;877    #endif  /* (USBD_CDC_ACM_ENABLE) */
                          ENDP

                  USBD_EndPoint0_Setup_CLS_ReqToDEV PROC
;;;880    #else
;;;881      BOOL USBD_EndPoint0_Setup_CLS_ReqToDEV  (void)                                        { return (__FALSE); }
000026  2000              MOVS     r0,#0
000028  4770              BX       lr
;;;882      BOOL USBD_EndPoint0_Setup_CLS_ReqToIF   (void)                                        { return (__FALSE); }
                          ENDP

                  USBD_EndPoint0_Setup_CLS_ReqToIF PROC
00002a  2000              MOVS     r0,#0
00002c  4770              BX       lr
;;;883      BOOL USBD_EndPoint0_Setup_CLS_ReqToEP   (void)                                        { return (__FALSE); }
                          ENDP

                  USBD_EndPoint0_Setup_CLS_ReqToEP PROC
00002e  2000              MOVS     r0,#0
000030  4770              BX       lr
;;;884      BOOL USBD_EndPoint0_Out_CLS_ReqToDEV    (void)                                        { return (__FALSE); }
                          ENDP

                  USBD_EndPoint0_Out_CLS_ReqToDEV PROC
000032  2000              MOVS     r0,#0
000034  4770              BX       lr
;;;885      BOOL USBD_EndPoint0_Out_CLS_ReqToIF     (void)                                        { return (__FALSE); }
                          ENDP

                  USBD_EndPoint0_Out_CLS_ReqToIF PROC
000036  2000              MOVS     r0,#0
000038  4770              BX       lr
;;;886      BOOL USBD_EndPoint0_Out_CLS_ReqToEP     (void)                                        { return (__FALSE); }
                          ENDP

                  USBD_EndPoint0_Out_CLS_ReqToEP PROC
00003a  2000              MOVS     r0,#0
00003c  4770              BX       lr
;;;887    #endif  /* (USBD_CLS_ENABLE) */
                          ENDP

                  USBD_SOF_Event PROC
;;;900      #ifndef __RTX
;;;901      void USBD_SOF_Event (void) {
00003e  f7ffbffe          B.W      USBD_HID_SOF_Event
;;;902        #if    (USBD_HID_ENABLE)
;;;903        USBD_HID_SOF_Event     ();
;;;904        #endif
;;;905        #if    (USBD_ADC_ENABLE)
;;;906        USBD_ADC_SOF_Event     ();
;;;907        #endif
;;;908        #if    (USBD_CDC_ACM_ENABLE)
;;;909        USBD_CDC_ACM_SOF_Event ();
;;;910        #endif
;;;911        #if    (USBD_CLS_ENABLE)
;;;912        USBD_CLS_SOF_Event     ();
;;;913        #endif
;;;914      }
;;;915      #endif
                          ENDP

                  usbd_os_evt_set PROC
;;;1148   
;;;1149   void usbd_os_evt_set     (U16 event_flags, U32 task)                  { }
000042  4770              BX       lr
;;;1150   U16  usbd_os_evt_get     (void)                                       { return (0); }
                          ENDP

                  usbd_os_evt_get PROC
000044  2000              MOVS     r0,#0
000046  4770              BX       lr
;;;1151   U32  usbd_os_evt_wait_or (U16 wait_flags, U16 timeout)                { return (0); }
                          ENDP

                  usbd_os_evt_wait_or PROC
000048  2000              MOVS     r0,#0
00004a  4770              BX       lr
;;;1152   #endif
                          ENDP

                  usbd_class_init PROC
;;;1153   
;;;1154   void usbd_class_init     (void)                                       {
00004c  f7ffbffe          B.W      usbd_hid_init
;;;1155   #if (USBD_HID_ENABLE)
;;;1156                                                                           usbd_hid_init();
;;;1157   #endif
;;;1158   #if (USBD_MSC_ENABLE)
;;;1159                                                                           usbd_msc_init();
;;;1160   #endif
;;;1161   #if (USBD_ADC_ENABLE)
;;;1162                                                                           usbd_adc_init();
;;;1163   #endif
;;;1164   #if (USBD_CDC_ACM_ENABLE)
;;;1165                                                                           USBD_CDC_ACM_Initialize();
;;;1166   #endif
;;;1167   #if (USBD_CLS_ENABLE)
;;;1168                                                                           usbd_cls_init();
;;;1169   #endif
;;;1170                                                                         }
;;;1171   
                          ENDP

                  USBD_RTX_TaskInit PROC
;;;1172   void USBD_RTX_TaskInit (void) {
000050  4770              BX       lr
;;;1173   
;;;1174   #ifdef __RTX
;;;1175     /* Initialize memory pools for endpoints */
;;;1176     U32 i;
;;;1177   
;;;1178     USBD_RTX_DevTask = 0;
;;;1179     if (USBD_RTX_P_Device) {
;;;1180       USBD_RTX_DevTask = os_tsk_create(USBD_RTX_Device,      3);
;;;1181     }
;;;1182   
;;;1183     for (i = 0; i <= 15; i++) {
;;;1184       USBD_RTX_EPTask[i] = 0;
;;;1185       if (USBD_RTX_P_EP[i]) {
;;;1186         USBD_RTX_EPTask[i] = os_tsk_create(USBD_RTX_P_EP[i], 2);
;;;1187       }
;;;1188     }
;;;1189   
;;;1190     USBD_RTX_CoreTask = 0;
;;;1191     if (USBD_RTX_P_Core) {
;;;1192       USBD_RTX_CoreTask = os_tsk_create(USBD_RTX_Core,       2);
;;;1193     }
;;;1194   #endif
;;;1195   }
;;;1196   
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  USBD_HID_InReport
                          %        65

                          AREA ||area_number.4||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.4||, ||.bss||
                  USBD_HID_OutReport
                          %        65

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  usbd_power
000000  00                DCB      0x00

                          AREA ||area_number.7||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.7||, ||.constdata||
                  usbd_hs_enable
000000  01                DCB      0x01

                          AREA ||area_number.8||, DATA, READONLY, ALIGN=1

                          EXPORTAS ||area_number.8||, ||.constdata||
                  usbd_if_num
000000  0001              DCW      0x0001

                          AREA ||area_number.9||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.9||, ||.constdata||
                  usbd_ep_num
000000  01                DCB      0x01

                          AREA ||area_number.10||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.10||, ||.constdata||
                  usbd_max_packet0
000000  08                DCB      0x08

                          AREA ||area_number.11||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.11||, ||.constdata||
                  usbd_hid_if_num
000000  00                DCB      0x00

                          AREA ||area_number.12||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.12||, ||.constdata||
                  usbd_hid_ep_intin
000000  01                DCB      0x01

                          AREA ||area_number.13||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.13||, ||.constdata||
                  usbd_hid_ep_intout
000000  01                DCB      0x01

                          AREA ||area_number.14||, DATA, READONLY, ALIGN=1

                          EXPORTAS ||area_number.14||, ||.constdata||
                  usbd_hid_interval
000000  00010040          DCW      0x0001,0x0040

                          AREA ||area_number.15||, DATA, READONLY, ALIGN=1

                          EXPORTAS ||area_number.15||, ||.constdata||
                  usbd_hid_maxpacketsize
000000  00400040          DCW      0x0040,0x0040

                          AREA ||area_number.16||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.16||, ||.constdata||
                  usbd_hid_inreport_num
000000  01                DCB      0x01

                          AREA ||area_number.17||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.17||, ||.constdata||
                  usbd_hid_outreport_num
000000  01                DCB      0x01

                          AREA ||area_number.18||, DATA, READONLY, ALIGN=1

                          EXPORTAS ||area_number.18||, ||.constdata||
                  usbd_hid_inreport_max_sz
000000  0040              DCW      0x0040

                          AREA ||area_number.19||, DATA, READONLY, ALIGN=1

                          EXPORTAS ||area_number.19||, ||.constdata||
                  usbd_hid_outreport_max_sz
000000  0040              DCW      0x0040

                          AREA ||area_number.20||, DATA, READONLY, ALIGN=1

                          EXPORTAS ||area_number.20||, ||.constdata||
                  usbd_hid_featreport_max_sz
000000  0001              DCW      0x0001

                          AREA ||area_number.21||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.21||, ||.constdata||
                  USBD_P_Power_Event
                          DCD      USBD_Power_Event

                          AREA ||area_number.22||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.22||, ||.constdata||
                  USBD_P_Reset_Event
                          DCD      USBD_Reset_Event

                          AREA ||area_number.23||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.23||, ||.constdata||
                  USBD_P_Suspend_Event
                          DCD      USBD_Suspend_Event

                          AREA ||area_number.24||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.24||, ||.constdata||
                  USBD_P_Resume_Event
                          DCD      USBD_Resume_Event

                          AREA ||area_number.25||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.25||, ||.constdata||
                  USBD_P_WakeUp_Event
                          DCD      USBD_WakeUp_Event

                          AREA ||area_number.26||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.26||, ||.constdata||
                  USBD_P_SOF_Event
                          DCD      USBD_SOF_Event

                          AREA ||area_number.27||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.27||, ||.constdata||
                  USBD_P_Error_Event
                          DCD      USBD_Error_Event

                          AREA ||area_number.28||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.28||, ||.constdata||
                  USBD_P_EP
                          DCD      USBD_EndPoint0
                          DCD      USBD_HID_EP_INT_Event
                          DCD      USBD_EndPoint2
                          DCD      USBD_EndPoint3
                          DCD      USBD_EndPoint4
                          DCD      USBD_EndPoint5
                          DCD      USBD_EndPoint6
                          DCD      USBD_EndPoint7
                          DCD      USBD_EndPoint8
                          DCD      USBD_EndPoint9
                          DCD      USBD_EndPoint10
                          DCD      USBD_EndPoint11
                          DCD      USBD_EndPoint12
                          DCD      USBD_EndPoint13
                          DCD      USBD_EndPoint14
                          DCD      USBD_EndPoint15

                          AREA ||area_number.29||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.29||, ||.constdata||
                  USBD_P_Configure_Event
                          DCD      USBD_Configure_Event

                          AREA ||area_number.30||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.30||, ||.constdata||
                  USBD_P_Interface_Event
                          DCD      USBD_Interface_Event

                          AREA ||area_number.31||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.31||, ||.constdata||
                  USBD_P_Feature_Event
                          DCD      USBD_Feature_Event

                          AREA ||area_number.32||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.32||, ||.constdata||
                  __rtx
                          DCD      0x00000000

                          AREA ||area_number.33||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.33||, ||.constdata||
                  USBD_HID_ReportDescriptor
000000  0600ff09          DCB      0x06,0x00,0xff,0x09
000004  01a10115          DCB      0x01,0xa1,0x01,0x15
000008  0026ff00          DCB      0x00,0x26,0xff,0x00
00000c  75089540          DCB      0x75,0x08,0x95,0x40
000010  09018102          DCB      0x09,0x01,0x81,0x02
000014  95400901          DCB      0x95,0x40,0x09,0x01
000018  91029501          DCB      0x91,0x02,0x95,0x01
00001c  0901b102          DCB      0x09,0x01,0xb1,0x02
000020  c0                DCB      0xc0

                          AREA ||area_number.34||, DATA, READONLY, ALIGN=1

                          EXPORTAS ||area_number.34||, ||.constdata||
                  USBD_HID_ReportDescriptorSize
000000  0021              DCW      0x0021

                          AREA ||area_number.35||, DATA, READONLY, ALIGN=1

                          EXPORTAS ||area_number.35||, ||.constdata||
                  USBD_HID_DescriptorOffset
000000  0012              DCW      0x0012

                          AREA ||area_number.36||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.36||, ||.constdata||
                  USBD_DeviceDescriptor
000000  12011001          DCB      0x12,0x01,0x10,0x01
000004  00000008          DCB      0x00,0x00,0x00,0x08
000008  280d0402          DCB      0x28,0x0d,0x04,0x02
00000c  00010102          DCB      0x00,0x01,0x01,0x02
000010  0301              DCB      0x03,0x01

                          AREA ||area_number.37||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.37||, ||.constdata||
                  USBD_DeviceQualifier
000000  0a060002          DCB      0x0a,0x06,0x00,0x02
000004  00000008          DCB      0x00,0x00,0x00,0x08
000008  0100              DCB      0x01,0x00

                          AREA ||area_number.38||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.38||, ||.constdata||
                  USBD_DeviceQualifier_HS
000000  0a060002          DCB      0x0a,0x06,0x00,0x02
000004  00000008          DCB      0x00,0x00,0x00,0x08
000008  0100              DCB      0x01,0x00

                          AREA ||area_number.39||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.39||, ||.constdata||
                  USBD_ConfigDescriptor
000000  09022900          DCB      0x09,0x02,0x29,0x00
000004  01010080          DCB      0x01,0x01,0x00,0x80
000008  fa090400          DCB      0xfa,0x09,0x04,0x00
00000c  00020300          DCB      0x00,0x02,0x03,0x00
000010  00040921          DCB      0x00,0x04,0x09,0x21
000014  00010001          DCB      0x00,0x01,0x00,0x01
000018  22210007          DCB      0x22,0x21,0x00,0x07
00001c  05810340          DCB      0x05,0x81,0x03,0x40
000020  00010705          DCB      0x00,0x01,0x07,0x05
000024  01034000          DCB      0x01,0x03,0x40,0x00
000028  0100              DCB      0x01,0x00

                          AREA ||area_number.40||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.40||, ||.constdata||
                  USBD_ConfigDescriptor_HS
000000  09022900          DCB      0x09,0x02,0x29,0x00
000004  01010080          DCB      0x01,0x01,0x00,0x80
000008  fa090400          DCB      0xfa,0x09,0x04,0x00
00000c  00020300          DCB      0x00,0x02,0x03,0x00
000010  00040921          DCB      0x00,0x04,0x09,0x21
000014  00010001          DCB      0x00,0x01,0x00,0x01
000018  22210007          DCB      0x22,0x21,0x00,0x07
00001c  05810340          DCB      0x05,0x81,0x03,0x40
000020  00060705          DCB      0x00,0x06,0x07,0x05
000024  01034000          DCB      0x01,0x03,0x40,0x00
000028  0600              DCB      0x06,0x00

                          AREA ||area_number.41||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.41||, ||.constdata||
                  USBD_OtherSpeedConfigDescriptor
000000  09072900          DCB      0x09,0x07,0x29,0x00
000004  01010080          DCB      0x01,0x01,0x00,0x80
000008  fa090400          DCB      0xfa,0x09,0x04,0x00
00000c  00020300          DCB      0x00,0x02,0x03,0x00
000010  00040921          DCB      0x00,0x04,0x09,0x21
000014  00010001          DCB      0x00,0x01,0x00,0x01
000018  22210007          DCB      0x22,0x21,0x00,0x07
00001c  05810340          DCB      0x05,0x81,0x03,0x40
000020  00060705          DCB      0x00,0x06,0x07,0x05
000024  01034000          DCB      0x01,0x03,0x40,0x00
000028  0600              DCB      0x06,0x00

                          AREA ||area_number.42||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.42||, ||.constdata||
                  USBD_OtherSpeedConfigDescriptor_HS
000000  09072900          DCB      0x09,0x07,0x29,0x00
000004  01010080          DCB      0x01,0x01,0x00,0x80
000008  fa090400          DCB      0xfa,0x09,0x04,0x00
00000c  00020300          DCB      0x00,0x02,0x03,0x00
000010  00040921          DCB      0x00,0x04,0x09,0x21
000014  00010001          DCB      0x00,0x01,0x00,0x01
000018  22210007          DCB      0x22,0x21,0x00,0x07
00001c  05810340          DCB      0x05,0x81,0x03,0x40
000020  00010705          DCB      0x00,0x01,0x07,0x05
000024  01034000          DCB      0x01,0x03,0x40,0x00
000028  0100              DCB      0x01,0x00

                          AREA ||area_number.43||, DATA, READONLY, ALIGN=1

                          EXPORTAS ||area_number.43||, ||.constdata||
                  USBD_StringDescriptor
000000  0403              DCB      0x04,0x03
000002  0409              DCW      0x0409
000004  1c034b00          DCB      0x1c,0x03,0x4b,0x00
000008  65006900          DCB      0x65,0x00,0x69,0x00
00000c  6c002000          DCB      0x6c,0x00,0x20,0x00
000010  53006f00          DCB      0x53,0x00,0x6f,0x00
000014  66007400          DCB      0x66,0x00,0x74,0x00
000018  77006100          DCB      0x77,0x00,0x61,0x00
00001c  72006500          DCB      0x72,0x00,0x65,0x00
000020  1e034b00          DCB      0x1e,0x03,0x4b,0x00
000024  65006900          DCB      0x65,0x00,0x69,0x00
000028  6c002000          DCB      0x6c,0x00,0x20,0x00
00002c  43004d00          DCB      0x43,0x00,0x4d,0x00
000030  53004900          DCB      0x53,0x00,0x49,0x00
000034  53002d00          DCB      0x53,0x00,0x2d,0x00
000038  44004100          DCB      0x44,0x00,0x41,0x00
00003c  50001a03          DCB      0x50,0x00,0x1a,0x03
000040  30003000          DCB      0x30,0x00,0x30,0x00
000044  30003100          DCB      0x30,0x00,0x31,0x00
000048  41003000          DCB      0x41,0x00,0x30,0x00
00004c  30003000          DCB      0x30,0x00,0x30,0x00
000050  30003000          DCB      0x30,0x00,0x30,0x00
000054  30003000          DCB      0x30,0x00,0x30,0x00
000058  1e034d00          DCB      0x1e,0x03,0x4d,0x00
00005c  42004500          DCB      0x42,0x00,0x45,0x00
000060  44002000          DCB      0x44,0x00,0x20,0x00
000064  43004d00          DCB      0x43,0x00,0x4d,0x00
000068  53004900          DCB      0x53,0x00,0x49,0x00
00006c  53002d00          DCB      0x53,0x00,0x2d,0x00
000070  44004100          DCB      0x44,0x00,0x41,0x00
000074  5000              DCB      0x50,0x00

                          AREA ||.data||, DATA, ALIGN=0

                  USBD_AltSetting
000000  00                DCB      0x00

                          AREA ||area_number.45||, DATA, ALIGN=0

                          EXPORTAS ||area_number.45||, ||.data||
                  USBD_EP0Buf
                          %        8

                          AREA ||area_number.46||, DATA, ALIGN=1

                          EXPORTAS ||area_number.46||, ||.data||
                  USBD_HID_PollingCnt
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.47||, DATA, ALIGN=0

                          EXPORTAS ||area_number.47||, ||.data||
                  USBD_HID_IdleCnt
000000  00                DCB      0x00

                          AREA ||area_number.48||, DATA, ALIGN=0

                          EXPORTAS ||area_number.48||, ||.data||
                  USBD_HID_IdleReload
000000  00                DCB      0x00

                          AREA ||area_number.49||, DATA, ALIGN=0

                          EXPORTAS ||area_number.49||, ||.data||
                  USBD_HID_IdleSet
000000  00                DCB      0x00

                          AREA ||area_number.50||, DATA, ALIGN=0

                          EXPORTAS ||area_number.50||, ||.data||
                  USBD_HID_FeatReport
000000  0000              DCB      0x00,0x00
