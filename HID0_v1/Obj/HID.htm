<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\HID.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\HID.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Thu Apr 16 14:27:30 2015
<BR><P>
<H3>Maximum Stack Usage =        664 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; usbd_hid_process &rArr; DAP_ProcessCommand &rArr; DAP_SWD_Transfer &rArr; SWD_Transfer &rArr; SWD_TransferSlow &rArr; PIN_DELAY_SLOW
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[19]">ADC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">ADC0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[19]">ADC0_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[1c]">ADC1_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[31]">ATIMER_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[34]">CAN0_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[30]">CAN1_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[a]">DAC_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[b]">DMA_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[d]">ETH_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[2f]">EVRT_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[c]">FLASHEEPROM_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[2d]">GINT0_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[2e]">GINT1_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[25]">GPIO0_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[26]">GPIO1_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[27]">GPIO2_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[28]">GPIO3_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[29]">GPIO4_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[2a]">GPIO5_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[2b]">GPIO6_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[2c]">GPIO7_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[1a]">I2C0_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[1b]">I2C1_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[23]">I2S0_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[24]">I2S1_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[f]">LCD_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[18]">MCPWM_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[35]">QEI_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[13]">RIT_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[32]">RTC_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[12]">SCT_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[e]">SDIO_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[1d]">SSP0_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[1e]">SSP1_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[3a]">SystemInit</a> from system_lpc18xx.o(.text) referenced from startup_lpc18xx.o(.text)
 <LI><a href="#[14]">TIMER0_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[15]">TIMER1_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[16]">TIMER2_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[17]">TIMER3_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[1f]">UART0_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[20]">UART1_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[21]">UART2_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[22]">UART3_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[10]">USB0_IRQHandler</a> from usbd_lpc18xx_usb0.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[11]">USB1_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[39]">USBD_Configure_Event</a> from usb_config_usb0.o(.text) referenced from usb_config_usb0.o(.constdata)
 <LI><a href="#[3c]">USBD_EndPoint0</a> from usbd_core.o(.text) referenced from usb_config_usb0.o(.constdata)
 <LI><a href="#[3d]">USBD_HID_EP_INT_Event</a> from usbd_hid.o(.text) referenced from usb_config_usb0.o(.constdata)
 <LI><a href="#[38]">USBD_SOF_Event</a> from usb_config_usb0.o(.text) referenced from usb_config_usb0.o(.constdata)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[33]">WDT_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[3b]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_lpc18xx.o(.text)
 <LI><a href="#[37]">_sputc</a> from printf1.o(i._sputc) referenced from printf1.o(i.__0sprintf$1)
 <LI><a href="#[36]">main</a> from usbd_demo.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3b]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(.text)
</UL>
<P><STRONG><a name="[aa]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[3e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[86]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[ab]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[ac]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[ad]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[ae]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[af]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[39]"></a>USBD_Configure_Event</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_Configure_Event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_config_usb0.o(.constdata)
</UL>
<P><STRONG><a name="[a8]"></a>USBD_ReqClrFeature_MSC</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_config_usb0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqSetClrFeature (via Veneer)
</UL>

<P><STRONG><a name="[a0]"></a>USBD_EndPoint0_Setup_MSC_ReqToIF</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0 (via Veneer)
</UL>

<P><STRONG><a name="[b0]"></a>USBD_EndPoint0_Out_MSC_ReqToIF</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>USBD_EndPoint0_Setup_ADC_ReqToIF</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>USBD_EndPoint0_Setup_ADC_ReqToEP</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text), UNUSED)

<P><STRONG><a name="[b3]"></a>USBD_EndPoint0_Out_ADC_ReqToIF</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>USBD_EndPoint0_Out_ADC_ReqToEP</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>USBD_EndPoint0_Setup_CDC_ReqToIF</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0 (via Veneer)
</UL>

<P><STRONG><a name="[a3]"></a>USBD_EndPoint0_Out_CDC_ReqToIF</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0 (via Veneer)
</UL>

<P><STRONG><a name="[b5]"></a>USBD_EndPoint0_Setup_CLS_ReqToDEV</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>USBD_EndPoint0_Setup_CLS_ReqToIF</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>USBD_EndPoint0_Setup_CLS_ReqToEP</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>USBD_EndPoint0_Out_CLS_ReqToDEV</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>USBD_EndPoint0_Out_CLS_ReqToIF</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>USBD_EndPoint0_Out_CLS_ReqToEP</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>USBD_SOF_Event</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USBD_SOF_Event &rArr; USBD_HID_SOF_Event &rArr; USBD_HID_EP_INTIN_Event &rArr; USBD_WriteEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_SOF_Event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_config_usb0.o(.constdata)
</UL>
<P><STRONG><a name="[bb]"></a>usbd_os_evt_set</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_config_usb0.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>usbd_os_evt_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>usbd_os_evt_wait_or</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>usbd_class_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_config_usb0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_hid_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init (via Veneer)
</UL>

<P><STRONG><a name="[96]"></a>USBD_RTX_TaskInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_config_usb0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init (via Veneer)
</UL>

<P><STRONG><a name="[47]"></a>USBD_Intr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Init
</UL>

<P><STRONG><a name="[45]"></a>USBD_PrimeEp</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_PrimeEp
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_IRQHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_WriteEP
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReadEP
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ResetEP
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Reset
</UL>

<P><STRONG><a name="[44]"></a>USBD_Reset</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBD_Reset &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_PrimeEp
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_IRQHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Init
</UL>

<P><STRONG><a name="[46]"></a>USBD_Init</STRONG> (Thumb, 152 bytes, Stack size 4 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USBD_Init &rArr; USBD_Reset &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Reset
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Intr
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init (via Veneer)
</UL>

<P><STRONG><a name="[97]"></a>USBD_Connect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_connect (via Veneer)
</UL>

<P><STRONG><a name="[be]"></a>USBD_Suspend</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_lpc18xx_usb0.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>USBD_Resume</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_lpc18xx_usb0.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>USBD_WakeUp</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbd_lpc18xx_usb0.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>USBD_WakeUpCfg</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqSetClrFeature (via Veneer)
</UL>

<P><STRONG><a name="[9e]"></a>USBD_SetAddress</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0 (via Veneer)
</UL>

<P><STRONG><a name="[89]"></a>USBD_Configure</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqSetConfiguration
</UL>

<P><STRONG><a name="[8a]"></a>USBD_ConfigEP</STRONG> (Thumb, 182 bytes, Stack size 28 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USBD_ConfigEP
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqSetInterface
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqSetConfiguration
</UL>

<P><STRONG><a name="[9b]"></a>USBD_DirCtrlEP</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0 (via Veneer)
</UL>

<P><STRONG><a name="[8b]"></a>USBD_EnableEP</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqSetInterface
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqSetConfiguration
</UL>

<P><STRONG><a name="[88]"></a>USBD_DisableEP</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqSetInterface
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqSetConfiguration
</UL>

<P><STRONG><a name="[48]"></a>USBD_ResetEP</STRONG> (Thumb, 128 bytes, Stack size 4 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USBD_ResetEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_PrimeEp
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqSetInterface
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqSetConfiguration
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ClrStallEP
</UL>

<P><STRONG><a name="[a2]"></a>USBD_SetStallEP</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqSetClrFeature (via Veneer)
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0 (via Veneer)
</UL>

<P><STRONG><a name="[49]"></a>USBD_ClrStallEP</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USBD_ClrStallEP &rArr; USBD_ResetEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ResetEP
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqSetClrFeature (via Veneer)
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0 (via Veneer)
</UL>

<P><STRONG><a name="[c1]"></a>USBD_ClearEPBuf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_lpc18xx_usb0.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>USBD_ReadEP</STRONG> (Thumb, 190 bytes, Stack size 20 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USBD_ReadEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_PrimeEp
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StatusOutStage (via Veneer)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataOutStage (via Veneer)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetupStage (via Veneer)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_EP_INTOUT_Event
</UL>

<P><STRONG><a name="[4b]"></a>USBD_WriteEP</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USBD_WriteEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_PrimeEp
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StatusInStage (via Veneer)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataInStage (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_EP_INTIN_Event
</UL>

<P><STRONG><a name="[c2]"></a>USBD_GetFrame</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbd_lpc18xx_usb0.o(.text), UNUSED)

<P><STRONG><a name="[10]"></a>USB0_IRQHandler</STRONG> (Thumb, 394 bytes, Stack size 40 bytes, usbd_lpc18xx_usb0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USB0_IRQHandler &rArr; USBD_Reset &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_reset_core (via Veneer)
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Reset
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_PrimeEp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>GLCD_Init</STRONG> (Thumb, 800 bytes, Stack size 8 bytes, glcd_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GLCD_Init &rArr; wr_reg &rArr; wr_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>GLCD_PutPixel</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, glcd_lpc18xx.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawLine
</UL>

<P><STRONG><a name="[69]"></a>GLCD_SetTextColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, glcd_lpc18xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>GLCD_SetBackColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, glcd_lpc18xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>GLCD_Clear</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, glcd_lpc18xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>GLCD_DrawLine</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, glcd_lpc18xx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_PutPixel
</UL>

<P><STRONG><a name="[55]"></a>GLCD_DrawChar</STRONG> (Thumb, 232 bytes, Stack size 36 bytes, glcd_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GLCD_DrawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawString
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayChar
</UL>

<P><STRONG><a name="[54]"></a>GLCD_DisplayChar</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, glcd_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GLCD_DisplayChar &rArr; GLCD_DrawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayString
</UL>

<P><STRONG><a name="[56]"></a>GLCD_DisplayString</STRONG> (Thumb, 34 bytes, Stack size 20 bytes, glcd_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = GLCD_DisplayString &rArr; GLCD_DisplayChar &rArr; GLCD_DrawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_printf_num
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_ClearLn
</UL>

<P><STRONG><a name="[57]"></a>GLCD_DrawString</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, glcd_lpc18xx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawChar
</UL>

<P><STRONG><a name="[58]"></a>GLCD_ClearLn</STRONG> (Thumb, 62 bytes, Stack size 72 bytes, glcd_lpc18xx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayString
</UL>

<P><STRONG><a name="[c3]"></a>GLCD_Bargraph</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, glcd_lpc18xx.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>GLCD_Bitmap</STRONG> (Thumb, 70 bytes, Stack size 28 bytes, glcd_lpc18xx.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>GLCD_ScrollVertical</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, glcd_lpc18xx.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>GLCD_WrCmd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, glcd_lpc18xx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
</UL>

<P><STRONG><a name="[5a]"></a>GLCD_WrReg</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, glcd_lpc18xx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
</UL>

<P><STRONG><a name="[5b]"></a>Delayms</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_DELAY_SLOW
</UL>

<P><STRONG><a name="[61]"></a>DAP_ProcessVendorCommand</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAP_ProcessCommand
</UL>

<P><STRONG><a name="[60]"></a>DAP_ProcessCommand</STRONG> (Thumb, 422 bytes, Stack size 24 bytes, dap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DAP_ProcessCommand &rArr; DAP_SWD_Transfer &rArr; SWD_Transfer &rArr; SWD_TransferSlow &rArr; PIN_DELAY_SLOW
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAP_ProcessVendorCommand
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWJ_Sequence
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWD_Transfer
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_DELAY_SLOW
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAP_SWD_TransferBlock
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAP_SWD_Transfer
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAP_SWJ_Pins
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_hid_process (via Veneer)
</UL>

<P><STRONG><a name="[66]"></a>DAP_Setup</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>MY_printf_num</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, usbd_demo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = MY_printf_num &rArr; GLCD_DisplayString &rArr; GLCD_DisplayChar &rArr; GLCD_DrawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayString
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>main</STRONG> (Thumb, 100 bytes, Stack size 512 bytes, usbd_demo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = main &rArr; usbd_hid_process &rArr; DAP_ProcessCommand &rArr; DAP_SWD_Transfer &rArr; SWD_Transfer &rArr; SWD_TransferSlow &rArr; PIN_DELAY_SLOW
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init (via Veneer)
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_connect (via Veneer)
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_printf_num
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_hid_process (via Veneer)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAP_Setup
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DisplayString
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Clear
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetBackColor
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetTextColor
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[63]"></a>SWJ_Sequence</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, sw_dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SWJ_Sequence &rArr; PIN_DELAY_SLOW
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_DELAY_SLOW
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAP_ProcessCommand
</UL>

<P><STRONG><a name="[6e]"></a>SWD_TransferFast</STRONG> (Thumb, 546 bytes, Stack size 40 bytes, sw_dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SWD_TransferFast
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_SWDIO_OUT_DISABLE
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_SWDIO_OUT_ENABLE
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_SWDIO_OUT
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_SWDIO_IN
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWD_Transfer
</UL>

<P><STRONG><a name="[73]"></a>SWD_TransferSlow</STRONG> (Thumb, 912 bytes, Stack size 48 bytes, sw_dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SWD_TransferSlow &rArr; PIN_DELAY_SLOW
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_DELAY_SLOW
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_SWDIO_OUT_DISABLE
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_SWDIO_OUT_ENABLE
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_SWDIO_OUT
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_SWDIO_IN
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWD_Transfer
</UL>

<P><STRONG><a name="[5e]"></a>SWD_Transfer</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sw_dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SWD_Transfer &rArr; SWD_TransferSlow &rArr; PIN_DELAY_SLOW
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWD_TransferSlow
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWD_TransferFast
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAP_ProcessCommand
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAP_SWD_TransferBlock
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAP_SWD_Transfer
</UL>

<P><STRONG><a name="[a6]"></a>USBD_ReqGetDescriptor_HID</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, usbd_core_hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USBD_ReqGetDescriptor_HID
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqGetDescriptor (via Veneer)
</UL>

<P><STRONG><a name="[74]"></a>USBD_EndPoint0_Setup_HID_ReqToIF</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, usbd_core_hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USBD_EndPoint0_Setup_HID_ReqToIF &rArr; USBD_DataInStage &rArr; USBD_WriteEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_SetProtocol
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_SetIdle
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_GetReport
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_GetProtocol
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_GetIdle
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StatusInStage (via Veneer)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataInStage (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0 (via Veneer)
</UL>

<P><STRONG><a name="[7c]"></a>USBD_EndPoint0_Out_HID_ReqToIF</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, usbd_core_hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBD_EndPoint0_Out_HID_ReqToIF &rArr; USBD_StatusInStage &rArr; USBD_WriteEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_SetReport
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StatusInStage (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0 (via Veneer)
</UL>

<P><STRONG><a name="[80]"></a>usbd_hid_get_protocol</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbd_hid.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_GetProtocol
</UL>

<P><STRONG><a name="[81]"></a>usbd_hid_set_protocol</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_hid.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_SetProtocol
</UL>

<P><STRONG><a name="[75]"></a>USBD_HID_GetReport</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, usbd_hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBD_HID_GetReport &rArr; usbd_hid_get_report
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_hid_get_report (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0_Setup_HID_ReqToIF
</UL>

<P><STRONG><a name="[7d]"></a>USBD_HID_SetReport</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, usbd_hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBD_HID_SetReport &rArr; usbd_hid_set_report
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_hid_set_report (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0_Out_HID_ReqToIF
</UL>

<P><STRONG><a name="[77]"></a>USBD_HID_GetIdle</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usbd_hid.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0_Setup_HID_ReqToIF
</UL>

<P><STRONG><a name="[78]"></a>USBD_HID_SetIdle</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usbd_hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_HID_SetIdle
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0_Setup_HID_ReqToIF
</UL>

<P><STRONG><a name="[7a]"></a>USBD_HID_GetProtocol</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usbd_hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_HID_GetProtocol
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_hid_get_protocol
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0_Setup_HID_ReqToIF
</UL>

<P><STRONG><a name="[7b]"></a>USBD_HID_SetProtocol</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usbd_hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_HID_SetProtocol
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_hid_set_protocol
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0_Setup_HID_ReqToIF
</UL>

<P><STRONG><a name="[82]"></a>USBD_HID_EP_INTIN_Event</STRONG> (Thumb, 292 bytes, Stack size 32 bytes, usbd_hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USBD_HID_EP_INTIN_Event &rArr; USBD_WriteEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_hid_get_report (via Veneer)
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_hid_get_report_trigger
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_SOF_Event
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_EP_INT_Event
</UL>

<P><STRONG><a name="[83]"></a>USBD_HID_EP_INTOUT_Event</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, usbd_hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USBD_HID_EP_INTOUT_Event &rArr; USBD_ReadEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_hid_set_report (via Veneer)
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_EP_INT_Event
</UL>

<P><STRONG><a name="[40]"></a>USBD_HID_Configure_Event</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usbd_hid.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Configure_Event
</UL>

<P><STRONG><a name="[3d]"></a>USBD_HID_EP_INT_Event</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usbd_hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USBD_HID_EP_INT_Event &rArr; USBD_HID_EP_INTIN_Event &rArr; USBD_WriteEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_EP_INTOUT_Event
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_EP_INTIN_Event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_config_usb0.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>USBD_HID_SOF_Event</STRONG> (Thumb, 270 bytes, Stack size 40 bytes, usbd_hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USBD_HID_SOF_Event &rArr; USBD_HID_EP_INTIN_Event &rArr; USBD_WriteEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_EP_INTIN_Event
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SOF_Event
</UL>

<P><STRONG><a name="[84]"></a>usbd_hid_get_report_trigger</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, usbd_hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = usbd_hid_get_report_trigger &rArr; USBD_HID_EP_INTIN_Event &rArr; USBD_WriteEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_EP_INTIN_Event
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_hid_process (via Veneer)
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_hid_get_report_trigger
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_hid_set_report (via Veneer)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_hid_get_report (via Veneer)
</UL>

<P><STRONG><a name="[c6]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core (via Veneer)
</UL>

<P><STRONG><a name="[a4]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod (via Veneer)
</UL>

<P><STRONG><a name="[c9]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[ca]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>USBD_ReqSetConfiguration</STRONG> (Thumb, 376 bytes, Stack size 40 bytes, usbd_core.o(i.USBD_ReqSetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USBD_ReqSetConfiguration &rArr; USBD_ConfigEP
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ResetEP
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DisableEP
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EnableEP
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ConfigEP
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0 (via Veneer)
</UL>

<P><STRONG><a name="[8c]"></a>USBD_ReqSetInterface</STRONG> (Thumb, 280 bytes, Stack size 48 bytes, usbd_core.o(i.USBD_ReqSetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USBD_ReqSetInterface &rArr; USBD_ConfigEP
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ResetEP
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DisableEP
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EnableEP
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ConfigEP
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0 (via Veneer)
</UL>

<P><STRONG><a name="[8d]"></a>__0sprintf$1</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core (via Veneer)
</UL>

<P><STRONG><a name="[cb]"></a>__1sprintf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1), UNUSED)

<P><STRONG><a name="[65]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_printf_num
</UL>

<P><STRONG><a name="[cc]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[cd]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[ce]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>ATIMER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CAN1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>EVRT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>FLASHEEPROM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>GINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>GINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>GPIO0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>GPIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>GPIO2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>GPIO3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>GPIO4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>GPIO5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>GPIO6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>GPIO7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>I2S0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>I2S1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SCT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>USB1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>SetClock</STRONG> (Thumb, 148 bytes, Stack size 12 bytes, system_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetClock
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[91]"></a>SystemInit_ExtMemCtl</STRONG> (Thumb, 910 bytes, Stack size 56 bytes, system_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SystemInit_ExtMemCtl &rArr; WaitUs &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUs
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[cf]"></a>MeasureFreq</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, system_lpc18xx.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>GetClkSel</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, system_lpc18xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockFreq
</UL>

<P><STRONG><a name="[92]"></a>GetClockFreq</STRONG> (Thumb, 180 bytes, Stack size 28 bytes, system_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GetClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClkSel
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[94]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, system_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemCoreClockUpdate &rArr; GetClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[3a]"></a>SystemInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, system_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SystemInit &rArr; SystemInit_ExtMemCtl &rArr; WaitUs &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit_ExtMemCtl
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>usbd_hid_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usbd_user_hid.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_class_init (via Veneer)
</UL>

<P><STRONG><a name="[7e]"></a>usbd_hid_get_report</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, usbd_user_hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usbd_hid_get_report
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_GetReport (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_EP_INTIN_Event (via Veneer)
</UL>

<P><STRONG><a name="[7f]"></a>usbd_hid_set_report</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, usbd_user_hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usbd_hid_set_report
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_SetReport (via Veneer)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_EP_INTOUT_Event (via Veneer)
</UL>

<P><STRONG><a name="[6c]"></a>usbd_hid_process</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, usbd_user_hid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = usbd_hid_process &rArr; DAP_ProcessCommand &rArr; DAP_SWD_Transfer &rArr; SWD_Transfer &rArr; SWD_TransferSlow &rArr; PIN_DELAY_SLOW
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_hid_get_report_trigger (via Veneer)
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAP_ProcessCommand (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[6a]"></a>usbd_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usbd_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = usbd_init &rArr; USBD_Init &rArr; USBD_Reset &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Init (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_RTX_TaskInit (via Veneer)
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_class_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[6b]"></a>usbd_connect</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbd_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Connect (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[4c]"></a>usbd_reset_core</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usbd_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_IRQHandler (via Veneer)
</UL>

<P><STRONG><a name="[d0]"></a>usbd_configured</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbd_core.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>USBD_SetupStage</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbd_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USBD_SetupStage &rArr; USBD_ReadEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReadEP (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0
</UL>

<P><STRONG><a name="[76]"></a>USBD_DataInStage</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usbd_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBD_DataInStage &rArr; USBD_WriteEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_WriteEP (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0_Setup_HID_ReqToIF (via Veneer)
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0
</UL>

<P><STRONG><a name="[99]"></a>USBD_DataOutStage</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usbd_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USBD_DataOutStage &rArr; USBD_ReadEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReadEP (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0
</UL>

<P><STRONG><a name="[79]"></a>USBD_StatusInStage</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbd_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USBD_StatusInStage &rArr; USBD_WriteEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_WriteEP (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0_Setup_HID_ReqToIF (via Veneer)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0_Out_HID_ReqToIF (via Veneer)
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0
</UL>

<P><STRONG><a name="[9a]"></a>USBD_StatusOutStage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbd_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USBD_StatusOutStage &rArr; USBD_ReadEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReadEP (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0
</UL>

<P><STRONG><a name="[3c]"></a>USBD_EndPoint0</STRONG> (Thumb, 430 bytes, Stack size 32 bytes, usbd_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = USBD_EndPoint0 &rArr; USBD_ReqSetInterface &rArr; USBD_ConfigEP
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0_Setup_HID_ReqToIF (via Veneer)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0_Out_HID_ReqToIF (via Veneer)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqSetInterface (via Veneer)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqSetConfiguration (via Veneer)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqSetClrFeature
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqGetStatus
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqGetDescriptor
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StatusOutStage
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StatusInStage
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataOutStage
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataInStage
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetupStage
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ClrStallEP (via Veneer)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetStallEP (via Veneer)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DirCtrlEP (via Veneer)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetAddress (via Veneer)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0_Out_CDC_ReqToIF (via Veneer)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0_Setup_CDC_ReqToIF (via Veneer)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0_Setup_MSC_ReqToIF (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_config_usb0.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr (via Veneer)
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit_ExtMemCtl
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUs
</UL>

<P><STRONG><a name="[a5]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[d1]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>USBD_ReqGetDescriptor</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, usbd_core.o(i.USBD_ReqGetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USBD_ReqGetDescriptor &rArr; USBD_ReqGetDescriptor_HID
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqGetDescriptor_HID (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0
</UL>

<P><STRONG><a name="[9c]"></a>USBD_ReqGetStatus</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_ReqGetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_ReqGetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0
</UL>

<P><STRONG><a name="[9d]"></a>USBD_ReqSetClrFeature</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_ReqSetClrFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USBD_ReqSetClrFeature &rArr; USBD_ClrStallEP &rArr; USBD_ResetEP &rArr; USBD_PrimeEp
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ClrStallEP (via Veneer)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetStallEP (via Veneer)
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_WakeUpCfg (via Veneer)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ReqClrFeature_MSC (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_EndPoint0
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[8f]"></a>WaitUs</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, system_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WaitUs &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit_ExtMemCtl
</UL>

<P><STRONG><a name="[4d]"></a>wr_reg</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, glcd_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wr_reg &rArr; wr_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_tran
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_WrReg
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Init
</UL>

<P><STRONG><a name="[51]"></a>delay</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, glcd_lpc18xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Init
</UL>

<P><STRONG><a name="[4f]"></a>spi_tran</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, glcd_lpc18xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
</UL>

<P><STRONG><a name="[4e]"></a>wr_cmd</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, glcd_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wr_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_tran
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_WrCmd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
</UL>

<P><STRONG><a name="[62]"></a>DAP_SWJ_Pins</STRONG> (Thumb, 204 bytes, Stack size 20 bytes, dap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DAP_SWJ_Pins
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAP_ProcessCommand
</UL>

<P><STRONG><a name="[5d]"></a>DAP_SWD_Transfer</STRONG> (Thumb, 704 bytes, Stack size 56 bytes, dap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DAP_SWD_Transfer &rArr; SWD_Transfer &rArr; SWD_TransferSlow &rArr; PIN_DELAY_SLOW
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWD_Transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAP_ProcessCommand
</UL>

<P><STRONG><a name="[5f]"></a>DAP_SWD_TransferBlock</STRONG> (Thumb, 300 bytes, Stack size 40 bytes, dap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DAP_SWD_TransferBlock &rArr; SWD_Transfer &rArr; SWD_TransferSlow &rArr; PIN_DELAY_SLOW
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWD_Transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAP_ProcessCommand
</UL>

<P><STRONG><a name="[5c]"></a>PIN_DELAY_SLOW</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PIN_DELAY_SLOW
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAP_ProcessCommand
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delayms
</UL>

<P><STRONG><a name="[71]"></a>PIN_SWDIO_IN</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sw_dp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWD_TransferSlow
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWD_TransferFast
</UL>

<P><STRONG><a name="[6f]"></a>PIN_SWDIO_OUT</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sw_dp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWD_TransferSlow
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWD_TransferFast
</UL>

<P><STRONG><a name="[72]"></a>PIN_SWDIO_OUT_ENABLE</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sw_dp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWD_TransferSlow
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWD_TransferFast
</UL>

<P><STRONG><a name="[70]"></a>PIN_SWDIO_OUT_DISABLE</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sw_dp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWD_TransferSlow
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWD_TransferFast
</UL>

<P><STRONG><a name="[6d]"></a>PIN_DELAY_SLOW</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sw_dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PIN_DELAY_SLOW
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWD_TransferSlow
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWJ_Sequence
</UL>

<P><STRONG><a name="[8e]"></a>_printf_core</STRONG> (Thumb, 334 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$1 (via Veneer)
</UL>

<P><STRONG><a name="[37]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf1.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0sprintf$1)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
